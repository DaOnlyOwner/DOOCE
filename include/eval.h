#pragma once
#include "definitions.h"
#include "game.h"

// TODO: Better eval function
class eval
{
public:
	eval() {}
	eval(const game& g);
	int operator()(const game& b, int c);
	static constexpr int bWt = 340;
	static constexpr int nWt = 310;
	static constexpr int qWt = 900;
	static constexpr int pWt = 100;
	static constexpr int rWt = 500;
	static constexpr int weights[7] = { pWt,rWt,bWt,nWt,pos_inf,qWt,0 };

	template<color VColor>
	void do_move(const move& m,const game& g);

	template<color VColor>
	void undo_move(const move& m,const game& g);

private:
	int material[2] = { 0,0 };
	int pt_score_opening[2] = { 0,0 };

	constexpr static int piece_tables_opening[7][64] = { {
	// Pawn 
	0,  0,  0,  0,  0,  0,  0,  0,
	50, 50, 50, 50, 50, 50, 50, 50,
	30, 30, 30, 30, 30, 30, 30, 30,
	10, 10, 20, 25, 25, 20, 10, 10,
	5,  5, 10, 23, 23, 10,  5,  5,
	5,-10,-10,  0,  0,-10,-10,  5,
	5, 15, 15,-20,-20, 15, 15,  5,
	0,  0,  0,  0,  0,  0,  0,  0},
	// Rook
	 {
	-5,  5,  5,  5,  5,  5,  5, -5,
	 5, 10, 10, 10, 10, 10, 10, 5,
	-5,  0,  0,  0,  0,  0,  0,-5,
	-5,  0,  0,  0,  0,  0,  0,-5,
	-5,  0,  0,  0,  0,  0,  0,-5,
	-5,  0,  0,  0,  0,  0,  0,-5,
	-5,  0,  0,  0,  0,  0,  0,-5,
	 0,  5, 5,  10,  0, 10,  5, 0},
	 // Bishop
	 {
	-20,-10,-10,-10,-10,-10,-10,-20,
	-10,  6,  6,  5,  5,  6,  6,-10,
	-10,  5, 10, 15, 15, 10,  5,-10,
	-10, 15, 10, 15, 15, 10, 15,-10,
	-10,  5, 10, 15, 15, 10,  5,-10,
	-10, 10, 10, 10, 10, 10, 10,-10,
	-10,  5,  0,  0,  0,  0,  5,-10,
	-20,-10,-10,-10,-10,-10,-10,-20
	},
	// Knight
	{
	-50,-40,-30,-30,-30,-30,-40,-50,
	-40,-20,  0,  0,  0,  0,-20,-40,
	-30,  7, 25, 25, 25, 25,  7,-30,
	-30,  5, 20, 20, 20, 20,  5,-30,
	-30,  3, 15, 15, 15, 15,  3,-30,
	-30,  0, 10, 10, 10, 10,  0,-30,
	-30, -5, -5,  5,  5, -5, -5,-30,
	-30,-40,-30,-30,-30,-30,-40,-50},
	// King
	{
	-50, -40, -40, -40, -40, -40, -40, -50,
	-50, -40, -40, -40, -40, -40, -40, -50,
	-50, -40, -40, -40, -40, -40, -40, -50,
	-50, -40, -40, -40, -40, -40, -40, -50,
	-40, -30, -30, -30, -30, -30, -30, -40,
	-40, -30, -30, -30, -30, -30, -30, -40,
	-25, -15, -15, -15, -15, -15, -15, -25,
	10,  10,  20,  -5, -10,  -5,  20,  10}, 
	// Queen
	{
	-20,-10,-10, -5, -5,-10,-10,-20,
	-10,  5,  5,  5,  5,  5,  5,-10,
	-10,  0, 10, 10, 10, 10,  5,-10,
	 -5,  5, 10 ,15, 15, 10,  0, -5,
	  0,  0, 10, 15, 15, 10,  0, -5,
	-10,  5, 10, 10, 10, 10,  5,-10,
	-10,  0,  0,  0,  0,  0,  0,-10,
	-20,-10,-10, -5, -5,-10,-10,-20}, 
	{
	// None
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0}
	};
};
